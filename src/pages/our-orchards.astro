---
import Base from "#layouts/Base.astro";
import { PortableText } from "astro-portabletext";
import "leaflet/dist/leaflet.css";
import { sanityClient } from "sanity:client";
import { Icon } from "astro-icon/components";

// @ts-ignore
const { content } = await sanityClient.getDocument(
  "874d04f8-ccac-4ad7-b2c1-0acbb6dc2cc6",
);

const orchards = await Promise.all(
  content[2].list.map(async ({ _ref }) => await sanityClient.getDocument(_ref)),
);
---

<Base>
  <main id="main" class="container typography">
    <section class="pt-header pb-8">
      <h1>{content[0].heading}</h1>
      <PortableText value={content[1].content} />
    </section>

    <section class="breakout flex" data-controller="tabs">
      <div
        class="h-full min-h-[500px] grow"
        id="map"
        data-controller="map"
        data-map-lat-value="-34.9032"
        data-map-lng-value="138.9317"
        data-map-zoom-value="13"
        class="aspect-video h-[500px]"
        data-tabs-target="list"
      >
        {
          orchards.map(({ location: { latitude, longitude } }) => (
            <button
              class="button icon"
              data-tabs-target="tab"
              data-latitude={latitude}
              data-longitude={longitude}
            >
              <span class="sr-only" />
              <Icon name="noto:red-apple" aria-hidden="true" />
            </button>
          ))
        }
      </div>

      <div class="overflow-y-scroll py-8 px-8">
        {
          orchards.map(({ name, content }) => (
            <div
              data-tabs-target="panel"
              class="hidden data-[tabs-selected]:block"
            >
              <h2>{name}</h2>
              <PortableText value={content} />
            </div>
          ))
        }
      </div>
    </section>
  </main>

  <script>
    import Map from "#controllers/map";
    import L from "leaflet";

    document.addEventListener("stimulus:loaded", () => {
      window.Stimulus.register("map", Map);

      document
        .getElementById("map")
        ?.addEventListener("map:loaded", (event: any) => {
          const map = event.detail;
          Array.from(
            document.querySelectorAll("[role='tab']").values(),
          ).forEach((marker: any) => {
            L.marker([marker.dataset.latitude, marker.dataset.longitude], {
              icon: L.divIcon({
                html: marker.outerHTML,
              }),
            }).addTo(map);
          });
        });
    });
  </script>

  <style is:global>
    .leaflet-container {
      font-size: inherit;
      font-family: inherit;
    }
  </style>
</Base>
