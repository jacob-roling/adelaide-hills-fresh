---
import Base from "#layouts/Base.astro";
import { sanityClient } from "sanity:client";
import { PortableText } from "astro-portabletext";
import { Image } from "astro:assets";
import urlForImage from "#utils/urlForImage";
import { Icon } from "astro-icon/components";

// @ts-ignore
const { title, description, content } = await sanityClient.getDocument(
  "6c74a027-f956-4eb9-b9ad-759705ebb67f",
);

const apples = await sanityClient.fetch(`*[_type == "apple"]`);
---

<Base>
  <Fragment slot="head">
    <title>{title}</title>
    <meta name="description" content={description} />
  </Fragment>

  <main id="main" class="container">
    <section class="prose py-32">
      <div>
        <h1>{content[0].heading}</h1>
        <PortableText value={content[1].content} />
      </div>
    </section>

    <ul class="prose m-0 grid max-w-full grid-cols-1 gap-16 sm:grid-cols-3">
      <li class="flex gap-16 sm:col-span-3">
        <Image
          class="aspect-square h-auto w-full rounded object-cover object-center sm:order-last"
          src={urlForImage(apples[0].image.src).url()}
          alt={apples[0].image.alt}
          inferSize
        />
        <div class="grow">
          <h2 class="mt-[1em] sm:mt-0">{apples[0].title}</h2>
          <p>{apples[0].description}</p>
        </div>
      </li>
      {
        apples.slice(1).map(({ title, image, description }) => (
          <li>
            <Image
              class="aspect-square h-auto w-full rounded object-cover object-center"
              src={urlForImage(image.src).url()}
              alt={image.alt}
              inferSize
            />
            <h2 class="mt-6">{title}</h2>
            <p class="mt-0">{description}</p>
          </li>
        ))
      }
    </ul>

    <h2 id="availability">Apple Variety Availability</h2>

    <div
      class="table-container mt-4 mb-8 max-h-max"
      role="region"
      aria-labelledby="availability"
      tabindex="0"
    >
      <table>
        <thead>
          <tr>
            <th class="text-nowrap">Apple Variety</th>
            <th>January</th>
            <th>February</th>
            <th>March</th>
            <th>April</th>
            <th>May</th>
            <th>June</th>
            <th>July</th>
            <th>August</th>
            <th>September</th>
            <th>October</th>
            <th>November</th>
            <th>December</th>
          </tr>
        </thead>
        <tbody>
          {
            apples.map(({ title, availability: { from, to } }) => (
              <tr>
                <td>{title}</td>
                {Array(12)
                  .fill(0)
                  .map((_, i) =>
                    i + 1 >= from && i < to ? (
                      <td class="bg-primary-9">
                        <span class="sr-only">Available</span>
                      </td>
                    ) : (
                      <td>
                        <span class="sr-only">Not Available</span>
                      </td>
                    ),
                  )}
              </tr>
            ))
          }
        </tbody>
      </table>
    </div>
  </main>
</Base>
